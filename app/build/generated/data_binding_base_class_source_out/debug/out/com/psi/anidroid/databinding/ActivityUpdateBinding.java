// Generated by view binder compiler. Do not edit!
package com.psi.anidroid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.psi.anidroid.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText authorInput2;

  @NonNull
  public final EditText pagesInput2;

  @NonNull
  public final EditText titleInput2;

  @NonNull
  public final Button updateButton;

  private ActivityUpdateBinding(@NonNull ConstraintLayout rootView, @NonNull EditText authorInput2,
      @NonNull EditText pagesInput2, @NonNull EditText titleInput2, @NonNull Button updateButton) {
    this.rootView = rootView;
    this.authorInput2 = authorInput2;
    this.pagesInput2 = pagesInput2;
    this.titleInput2 = titleInput2;
    this.updateButton = updateButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.author_input2;
      EditText authorInput2 = ViewBindings.findChildViewById(rootView, id);
      if (authorInput2 == null) {
        break missingId;
      }

      id = R.id.pages_input2;
      EditText pagesInput2 = ViewBindings.findChildViewById(rootView, id);
      if (pagesInput2 == null) {
        break missingId;
      }

      id = R.id.title_input2;
      EditText titleInput2 = ViewBindings.findChildViewById(rootView, id);
      if (titleInput2 == null) {
        break missingId;
      }

      id = R.id.update_button;
      Button updateButton = ViewBindings.findChildViewById(rootView, id);
      if (updateButton == null) {
        break missingId;
      }

      return new ActivityUpdateBinding((ConstraintLayout) rootView, authorInput2, pagesInput2,
          titleInput2, updateButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
